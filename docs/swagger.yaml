basePath: /api/v1
definitions:
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  handler.AuthenticateUserRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  handler.CreateUserRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  handler.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  handler.UserResponse:
    properties:
      email:
        type: string
      name:
        type: string
    type: object
  schemas.User:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      updatedAt:
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://localhost:8080/swagger/index.html
host: localhost:8080
info:
  contact:
    email: javier@jsrf.com.br
    name: Javier Salvador
    url: http://www.jsrf.com.br
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Auth Example API
  version: "1.0"
paths:
  /auth:
    post:
      consumes:
      - application/json
      description: Authenticate email and password for token generate
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.AuthenticateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Authenticate
      tags:
      - auth
  /me/:
    get:
      consumes:
      - application/json
      description: List all users on platform
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/schemas.User'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Users
      tags:
      - user
  /signup:
    post:
      consumes:
      - application/json
      description: Create new user with password hashed
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: SignUp
      tags:
      - auth
  /users/:
    get:
      consumes:
      - application/json
      description: List all users on platform
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/schemas.User'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Users
      tags:
      - user
  /users/:userId:
    get:
      consumes:
      - application/json
      description: Detail of user on platform
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: User
      tags:
      - user
securityDefinitions:
  JWT:
    type: basic
swagger: "2.0"
